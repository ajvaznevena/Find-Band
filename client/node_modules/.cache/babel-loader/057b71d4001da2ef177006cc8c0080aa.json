{"ast":null,"code":"var _jsxFileName = \"/home/shone/Desktop/28-nadjibend/client/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport '../css/Login.css';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitforAccount = async event => {\n      const forAccount = this.state.forAccount;\n\n      if (!this.checkFormValidity(forAccount)) {\n        return;\n      }\n\n      try {\n        const response = await axios.post('/api/user/login', forAccount);\n        localStorage.setItem(\"token\", response.data.token);\n        console.log(\"uspesan log in\");\n      } catch (e) {\n        // console.log(e.response.data.message);\n        window.alert(\"Email or password incorrect!\");\n      }\n\n      console.log(forAccount);\n      document.getElementById(\"formAccount\").reset();\n    };\n\n    this.state = {\n      forAccount: {\n        accountType: '',\n        email: '',\n        password: ''\n      }\n    };\n    this.showFormforAccount = this.showFormforAccount.bind(this);\n    this.onAccountTypeChange = this.onAccountTypeChange.bind(this);\n    this.onEmailChangeforAccount = this.onEmailChangeforAccount.bind(this);\n    this.onPasswordChangeforAccount = this.onPasswordChangeforAccount.bind(this);\n    this.handleSubmitforAccount = this.handleSubmitforAccount.bind(this);\n  }\n\n  checkFormValidity(entity) {\n    const validationEmailRegex = new RegExp(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\");\n    const validationPasswordRegex = new RegExp(\"^(?=.*\\\\d).{4,12}$\");\n    console.log(entity);\n\n    if (entity.email === '' || !validationEmailRegex.test(entity.email)) {\n      window.alert(\"Please insert valid email!\");\n      return false;\n    } else if (entity.password === '' || !validationPasswordRegex.test(entity.password)) {\n      window.alert(\"Password must contain between 4-12 characters and at least one digit!\");\n      return false;\n    }\n\n    return true;\n  }\n\n  showFormforAccount() {\n    const formAccount = document.getElementById(\"registerAccount\");\n    formAccount.style.display = \"block\";\n    this.setState({\n      forAccount: {\n        accountType: '',\n        email: '',\n        password: ''\n      }\n    });\n  }\n\n  onEmailChangeforAccount(email) {\n    const forAccount = {\n      accountType: this.state.forAccount.accountType,\n      email: email.target.value,\n      password: this.state.forAccount.password\n    };\n    this.setState({\n      forAccount\n    });\n  }\n\n  onPasswordChangeforAccount(password) {\n    const forAccount = {\n      accountType: this.state.forAccount.accountType,\n      email: this.state.forAccount.email,\n      password: password.target.value\n    };\n    this.setState({\n      forAccount\n    });\n  }\n\n  onAccountTypeChange(accountFor) {\n    console.log(accountFor.target.value);\n    const forAccount = {\n      // accountType: accountFor.target.value,\n      email: this.state.forAccount.email,\n      password: this.state.forAccount.password\n    };\n    this.setState({\n      forAccount\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      id: \"loginAccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"accountFor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, \"Account for:\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"selectAccountType\",\n      className: \"form-control\",\n      onChange: this.onAccountTypeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"musician\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, \"Musician\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"band\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, \"Band\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"tavern\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, \"Tavern\"))), /*#__PURE__*/React.createElement(\"form\", {\n      id: \"formAccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      id: \"email\",\n      placeholder: \"Enter email\",\n      name: \"email\",\n      onChange: this.onEmailChangeforAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"pwd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"pwd\",\n      placeholder: \"Enter password\",\n      name: \"pwd\",\n      onChange: this.onPasswordChangeforAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleSubmitforAccount,\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, \"Sign in\"))));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/shone/Desktop/28-nadjibend/client/src/components/Login.js"],"names":["React","Component","axios","Register","constructor","props","handleSubmitforAccount","event","forAccount","state","checkFormValidity","response","post","localStorage","setItem","data","token","console","log","e","window","alert","document","getElementById","reset","accountType","email","password","showFormforAccount","bind","onAccountTypeChange","onEmailChangeforAccount","onPasswordChangeforAccount","entity","validationEmailRegex","RegExp","validationPasswordRegex","test","formAccount","style","display","setState","target","value","accountFor","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../css/Login.css';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            forAccount: {\n                accountType: '',\n                email: '',\n                password: ''\n            }\n        };\n\n        this.showFormforAccount = this.showFormforAccount.bind(this);\n        this.onAccountTypeChange = this.onAccountTypeChange.bind(this);\n        this.onEmailChangeforAccount = this.onEmailChangeforAccount.bind(this);\n        this.onPasswordChangeforAccount = this.onPasswordChangeforAccount.bind(this);\n        this.handleSubmitforAccount = this.handleSubmitforAccount.bind(this);\n\n    }\n\n    checkFormValidity(entity) {\n        const validationEmailRegex = new RegExp(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\");\n        const validationPasswordRegex = new RegExp(\"^(?=.*\\\\d).{4,12}$\");\n\n        console.log(entity);\n        if (entity.email === '' || !validationEmailRegex.test(entity.email)) {\n            window.alert(\"Please insert valid email!\");\n            return false;\n        } else if (entity.password === '' || !validationPasswordRegex.test(entity.password)) {\n            window.alert(\"Password must contain between 4-12 characters and at least one digit!\");\n            return false;\n        }\n\n        return true;\n    }\n\n    showFormforAccount() {\n        const formAccount = document.getElementById(\"registerAccount\");\n        formAccount.style.display = \"block\";\n        this.setState({\n            forAccount: {\n                accountType: '',\n                email: '',\n                password: ''\n            }\n        });\n    }\n\n    onEmailChangeforAccount(email) {\n        const forAccount = {\n            accountType: this.state.forAccount.accountType,\n            email: email.target.value,\n            password: this.state.forAccount.password\n        }\n        this.setState({\n            forAccount\n        });\n    }\n\n    onPasswordChangeforAccount(password) {\n        const forAccount = {\n            accountType: this.state.forAccount.accountType,\n            email: this.state.forAccount.email,\n            password: password.target.value\n        };\n        this.setState({\n            forAccount\n        });\n    }\n\n    onAccountTypeChange(accountFor) {\n        console.log(accountFor.target.value);\n        const forAccount = {\n            // accountType: accountFor.target.value,\n            email: this.state.forAccount.email,\n            password: this.state.forAccount.password\n        }\n        this.setState({\n            forAccount\n        });\n    }\n\n    handleSubmitforAccount = async event => {\n        const forAccount = this.state.forAccount;\n        if (!this.checkFormValidity(forAccount)) {\n            return;\n        }\n\n        try {\n            const response = await axios.post('/api/user/login', forAccount);\n            localStorage.setItem(\"token\", response.data.token)\n            console.log(\"uspesan log in\")\n        } catch (e) {\n            // console.log(e.response.data.message);\n            window.alert(\"Email or password incorrect!\");\n        }\n\n        console.log(forAccount);\n        document.getElementById(\"formAccount\").reset();\n    }\n\n    render() {\n\n        return (\n            <div className=\"login\">\n\n                <div className=\"container\" id=\"loginAccount\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"accountFor\">Account for:</label>\n                        <select id=\"selectAccountType\" className=\"form-control\" onChange={this.onAccountTypeChange}>\n                            <option value=\"musician\">Musician</option>\n                            <option value=\"band\">Band</option>\n                            <option value=\"tavern\">Tavern</option>\n                        </select>\n                    </div>\n\n                    <form id=\"formAccount\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email:</label>\n                            <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\" onChange={this.onEmailChangeforAccount} />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"pwd\">Password:</label>\n                            <input type=\"password\" className=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" name=\"pwd\" onChange={this.onPasswordChangeforAccount} />\n                        </div>\n\n                        <button type=\"button\" onClick={this.handleSubmitforAccount} className=\"btn btn-success\">Sign in</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}