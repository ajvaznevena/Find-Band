{"ast":null,"code":"var _jsxFileName = \"/home/shone/Desktop/pveb-updated/new_client/src/components/Register.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport '../css/Register.css';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitforAccount = async event => {\n      const forAccount = this.state.forAccount;\n\n      if (!this.checkFormValidity(forAccount)) {\n        return;\n      }\n\n      try {\n        await axios.post('/api/user/register', forAccount);\n        console.log(\"Uspesna registracija\");\n      } catch (e) {\n        console.log(e.response.data.message);\n      }\n\n      console.log(forAccount);\n      document.getElementById(\"formAccount\").reset();\n    };\n\n    this.state = {\n      forAccount: {\n        accountType: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      }\n    };\n    this.showFormforAccount = this.showFormforAccount.bind(this);\n    this.onAccountTypeChange = this.onAccountTypeChange.bind(this);\n    this.onEmailChangeforAccount = this.onEmailChangeforAccount.bind(this);\n    this.onPasswordChangeforAccount = this.onPasswordChangeforAccount.bind(this);\n    this.onPasswordConfirmChangeforAccount = this.onPasswordConfirmChangeforAccount.bind(this);\n    this.handleSubmitforAccount = this.handleSubmitforAccount.bind(this);\n  }\n\n  checkFormValidity(entity) {\n    const validationEmailRegex = new RegExp(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\");\n    const validationPasswordRegex = new RegExp(\"^(?=.*\\\\d).{4,12}$\");\n\n    if (entity.email === '' || !validationEmailRegex.test(entity.email)) {\n      window.alert(\"Please insert valid email!\");\n      return false;\n    } else if (entity.password === '' || !validationPasswordRegex.test(entity.password)) {\n      window.alert(\"Password must contain between 4-12 characters and at least one digit!\");\n      return false;\n    } else if (entity.password !== entity.confirmPassword) {\n      window.alert(\"Passwords do not match!\");\n      return false;\n    }\n\n    return true;\n  }\n\n  showFormforAccount() {\n    const formAccount = document.getElementById(\"registerAccount\");\n    formAccount.style.display = \"block\";\n    this.setState({\n      forAccount: {\n        accountType: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      }\n    });\n  }\n\n  onEmailChangeforAccount(email) {\n    const forAccount = {\n      accountType: this.state.forAccount.accountType,\n      email: email.target.value,\n      password: this.state.forAccount.password,\n      confirmPassword: this.state.forAccount.confirmPassword\n    };\n    this.setState({\n      forAccount\n    });\n  }\n\n  onPasswordChangeforAccount(password) {\n    const forAccount = {\n      accountType: this.state.forAccount.accountType,\n      email: this.state.forAccount.email,\n      password: password.target.value,\n      confirmPassword: this.state.forAccount.confirmPassword\n    };\n    this.setState({\n      forAccount\n    });\n  }\n\n  onPasswordConfirmChangeforAccount(passwordConfirm) {\n    const forAccount = {\n      accountType: this.state.forAccount.accountType,\n      email: this.state.forAccount.email,\n      password: this.state.forAccount.password,\n      confirmPassword: passwordConfirm.target.value\n    };\n    this.setState({\n      forAccount\n    });\n  }\n\n  onAccountTypeChange(accountFor) {\n    // console.log(accountFor.target.value);\n    const forAccount = {\n      accountType: accountFor.target.value,\n      email: this.state.forAccount.email,\n      password: this.state.forAccount.password,\n      confirmPassword: this.state.forAccount.confirmPassword\n    };\n    this.setState({\n      forAccount\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      id: \"registerAccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"accountFor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, \"Account for:\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"selectAccountType\",\n      className: \"form-control\",\n      onChange: this.onAccountTypeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"musician\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, \"Musician\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"band\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, \"Band\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"tavern\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, \"Tavern\"))), /*#__PURE__*/React.createElement(\"form\", {\n      id: \"formAccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      id: \"email\",\n      placeholder: \"Enter email\",\n      name: \"email\",\n      onChange: this.onEmailChangeforAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"pwd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"pwd\",\n      placeholder: \"Enter password\",\n      name: \"pwd\",\n      onChange: this.onPasswordChangeforAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"pwd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, \"Confirm password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"pwdConfirm\",\n      placeholder: \"Enter password\",\n      name: \"pwd\",\n      onChange: this.onPasswordConfirmChangeforAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleSubmitforAccount,\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, \"Sign up\"))));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/shone/Desktop/pveb-updated/new_client/src/components/Register.js"],"names":["React","Component","axios","Register","constructor","props","handleSubmitforAccount","event","forAccount","state","checkFormValidity","post","console","log","e","response","data","message","document","getElementById","reset","accountType","email","password","confirmPassword","showFormforAccount","bind","onAccountTypeChange","onEmailChangeforAccount","onPasswordChangeforAccount","onPasswordConfirmChangeforAccount","entity","validationEmailRegex","RegExp","validationPasswordRegex","test","window","alert","formAccount","style","display","setState","target","value","passwordConfirm","accountFor","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../css/Register.css';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            forAccount: {\n                accountType: '',\n                email: '',\n                password: '',\n                confirmPassword: ''\n            }\n        };\n    \n        this.showFormforAccount = this.showFormforAccount.bind(this);\n        this.onAccountTypeChange = this.onAccountTypeChange.bind(this);\n        this.onEmailChangeforAccount = this.onEmailChangeforAccount.bind(this);\n        this.onPasswordChangeforAccount = this.onPasswordChangeforAccount.bind(this);\n        this.onPasswordConfirmChangeforAccount = this.onPasswordConfirmChangeforAccount.bind(this);\n        this.handleSubmitforAccount = this.handleSubmitforAccount.bind(this);\n\n    }\n    \n    checkFormValidity(entity) {\n        const validationEmailRegex = new RegExp(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\");\n        const validationPasswordRegex = new RegExp(\"^(?=.*\\\\d).{4,12}$\");\n\n        if (entity.email === '' || !validationEmailRegex.test(entity.email)) {\n            window.alert(\"Please insert valid email!\");\n            return false;\n        } else if (entity.password === '' || !validationPasswordRegex.test(entity.password)) {\n            window.alert(\"Password must contain between 4-12 characters and at least one digit!\");\n            return false;\n        } else if (entity.password !== entity.confirmPassword) {\n            window.alert(\"Passwords do not match!\");\n            return false;\n        }\n\n        return true;\n    }\n\n    showFormforAccount() {\n        const formAccount = document.getElementById(\"registerAccount\");\n        formAccount.style.display = \"block\";\n        this.setState({\n            forAccount: {\n                accountType: '',\n                email: '',\n                password: '',\n                confirmPassword: ''\n            }\n        });\n    }\n\n    onEmailChangeforAccount(email) {\n        const forAccount = {\n            accountType: this.state.forAccount.accountType,\n            email: email.target.value,\n            password: this.state.forAccount.password,\n            confirmPassword: this.state.forAccount.confirmPassword\n        }\n        this.setState({\n            forAccount\n        });\n    }\n\n    onPasswordChangeforAccount(password) {\n        const forAccount = {\n            accountType: this.state.forAccount.accountType,\n            email: this.state.forAccount.email,\n            password: password.target.value,\n            confirmPassword: this.state.forAccount.confirmPassword\n        };\n        this.setState({\n            forAccount\n        });\n    }\n\n    onPasswordConfirmChangeforAccount(passwordConfirm) {\n        const forAccount = {\n            accountType: this.state.forAccount.accountType,\n            email: this.state.forAccount.email,\n            password: this.state.forAccount.password,\n            confirmPassword: passwordConfirm.target.value\n        };\n        this.setState({\n            forAccount\n        });\n    }\n\n    onAccountTypeChange(accountFor) {\n        // console.log(accountFor.target.value);\n        const forAccount = {\n            accountType: accountFor.target.value,\n            email: this.state.forAccount.email,\n            password: this.state.forAccount.password,\n            confirmPassword: this.state.forAccount.confirmPassword\n        }\n        this.setState({\n            forAccount\n        });\n    }\n\n\n\n    handleSubmitforAccount = async event => {\n        const forAccount = this.state.forAccount;\n        if (!this.checkFormValidity(forAccount)) {\n            return;\n        }\n        try {\n            await axios.post('/api/user/register', forAccount);\n            console.log(\"Uspesna registracija\")\n        } catch (e) {\n            console.log(e.response.data.message)\n        }\n        \n        console.log(forAccount);\n        document.getElementById(\"formAccount\").reset();\n    }\n\n    render() {\n\n        return (\n            <div className=\"signin\">\n\n                <div className=\"container\" id=\"registerAccount\">\n                    <h2>Register</h2>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"accountFor\">Account for:</label>\n                        <select id=\"selectAccountType\" className=\"form-control\" onChange={this.onAccountTypeChange}>\n                            <option value=\"musician\">Musician</option>\n                            <option value=\"band\">Band</option>\n                            <option value=\"tavern\">Tavern</option>\n                        </select>\n                    </div>\n\n                    <form id=\"formAccount\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email:</label>\n                            <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\" onChange={this.onEmailChangeforAccount}/>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"pwd\">Password:</label>\n                            <input type=\"password\" className=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" name=\"pwd\" onChange={this.onPasswordChangeforAccount}/>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"pwd\">Confirm password:</label>\n                            <input type=\"password\" className=\"form-control\" id=\"pwdConfirm\" placeholder=\"Enter password\" name=\"pwd\" onChange={this.onPasswordConfirmChangeforAccount}/>\n                        </div>\n\n                        <button type=\"button\" onClick={this.handleSubmitforAccount} className=\"btn btn-success\">Sign up</button>\n                    </form>\n                </div>\n            </div>\n    );\n  }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}